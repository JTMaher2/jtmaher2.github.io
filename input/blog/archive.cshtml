Title: All Posts
---

@{
    int IndexOfNth(string str, char c, int n) {
        int s = -1;

        for (int i = 0; i < n; i++) {
            s = str.IndexOf(c, s + 1);

            if (s == -1) break;
        }

        return s;
    }
}

<div class="card">
    <div class="card-header"><span class="oi oi-calendar"></span> Archives</div>
    <div class="card-body">
        @foreach (IGrouping<int, IDocument> yearGroup in Outputs
           .FromPipeline(nameof(Content))
           .Flatten()
           .FilterSources($"{Constants.BlogPath}/posts/*")
           .Where(x => x.GetDateTime("Published").Year > 2000)
           .GroupBy(x => x.GetDateTime("Published").Year)
           .OrderByDescending(x => x.Key))
        {
            <h5 class="card-title">@(yearGroup.Key)</h5>
            <div class="card-text mb-2">
                @foreach (IGrouping<(string, string), IDocument> monthGroup in yearGroup
                   .Where(doc => doc.GetDateTime("Published").Year > 2000)
                   .GroupBy(doc => (doc.GetDateTime("Published").ToString("MM"), doc.GetDateTime("Published").ToString("MMMM")))
                   .OrderByDescending(x => x.Key.Item1))
                {
                    var skipped = monthGroup.Skip(0);
                    foreach (IDocument post in skipped)
                    {
                        string strTitle = post.Destination.GetTitle();
                        <h3><a href="@(post.Destination.FullPath)#disqus_thread">@strTitle.Substring(IndexOfNth(strTitle, ' ', 3))</a></h3>
                        <span>Posted on @(post.GetPublishedDate().ToShortDateString())</span>
                    }
                }
            </div>
        }
    </div>
</div>
